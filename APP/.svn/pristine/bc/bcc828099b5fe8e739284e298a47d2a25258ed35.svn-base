<!doctype html>
<html>

	<head>
		<meta charset="utf-8">
		<title></title>
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<link href="css/mui.css" rel="stylesheet" />
		<link href="../../../css/mui.min.css" rel="stylesheet" />
		<script src="../../../js/mui.min.js"></script>
		<!-- 相机 -->
		<link rel="stylesheet" href="../../../css/common.css" type="text/css" charset="utf-8"/>
		<script type="text/javascript" src="../../../js/common.js"></script>
		<style>
			.mui-middle{
				 display:list-item;
				 text-align:left;
				 margin-top: 25px;
			}
		</style>
	</head>

	<body>
		<header class="mui-bar mui-bar-nav" style="padding-right: 15px;">
			<a class="mui-action-back mui-icon mui-icon-left-nav mui-pull-left"></a>
			<h1 class="mui-title">设备保养</h1>
			<span class="mui-pull-right mui-icon mui-icon-home"></span>
		</header>
		<div class="mui-content">
			<div class="mui-content-padded">
				<div class="mui-middle">
					<div class="mui-input-row" >
							<label>设备：</label>
							<input type="text" value="拉完机器1" disabled="disabled">
						</div>
						<div class="mui-input-row">
							<label>计划名称：</label>
							<input type="text" value="xxxy原因1" disabled="disabled">
						</div>
						<div class="mui-input-row">
							<label>日期：</label>
							<input style="background-color: white;" type="date" value="xxxy原因1" >
						</div>
					<div class="mui-input-row" style="margin: 10px 5px;">
						<label>保养内容：</label>
						<textarea id="textarea" rows="4" placeholder="多行文本框"></textarea>
					</div>
					<div class="mui-input-row" style="margin: 10px 5px;text-align: center;">
						<label>备件：</label>
						<select class="mui-btn-block" style="width: 40%;float: left;">
							<option value="item-1">有</option>
							<option value="item-2">无</option>
						</select>
						<a href="replace.html">选择备件</a>
					</div>
					<br/>
							<div class="button" onclick="getImage()">拍照</div>
							<!-- <div class="button" onclick="getVideo()">录像</div> -->
							<br/>
							<!-- History list -->
							<ul id="history" class="dlist" style="text-align:left;">
								<li id="empty" class="ditem-empty">无历史记录</li>
							</ul>
							<br/>
							<div class="button button-waring" onclick="cleanHistory()">清空历史记录</div>
							<br/>
							<div id="outpos"/>
							<!-- <div id="outpos"/> -->
							<!-- <div id="output">
							Camera管理摄像头设备，可用于拍摄照片、录制视频文件。
									</div> -->
					<button  class="mui-btn mui-pull-right" style="font-size: 18px;margin: .5em .7em;">
						<a href="index.html">保存</a>
					</button>
				</div>
			</div>
		</div>
		<script type="text/javascript">
			mui.init()
		</script>
		<script type="text/javascript">
		var i=1,gentry=null,w=null;
		var hl=null,le=null,de=null,ie=null;
		var unv=true;
		var bUpdated=false; //用于兼容可能提前注入导致DOM未解析完更新的问题
		// H5 plus事件处理
		function plusReady(){
			// 获取摄像头目录对象
			plus.io.resolveLocalFileSystemURL('_doc/', function(entry){
				entry.getDirectory('camera', {create:true}, function(dir){
					gentry = dir;
					updateHistory();
				}, function(e){
					// outSet('Get directory "camera" failed: '+e.message);
				} );
			}, function(e){
				// outSet('Resolve "_doc/" failed: '+e.message);
			});
		}
		if(window.plus){
			plusReady();
		}else{
			document.addEventListener('plusready', plusReady, false);
		}
		// 监听DOMContentLoaded事件
		document.addEventListener('DOMContentLoaded', function(){
			// 获取DOM元素对象
			hl=document.getElementById('history');
			le=document.getElementById('empty');
			de=document.getElementById('display');
			if(ie=document.getElementById('index')){
				ie.onchange=indexChanged;
			}
			// 判断是否支持video标签
			unv=!document.createElement('video').canPlayType;
			updateHistory();
		},false );
		function changeIndex(){
			// outSet('选择摄像头：');
			ie.focus();
		}
		function indexChanged(){
			de.innerText = ie.options[ie.selectedIndex].innerText;
			i = parseInt(ie.value);
			// outLine(de.innerText);
		}
		// 拍照
		function getImage(){
			// outSet('开始拍照：');
			var cmr = plus.camera.getCamera();
			cmr.captureImage(function(p){
				// outLine('成功：'+p);
				plus.io.resolveLocalFileSystemURL(p, function(entry){
					createItem(entry);
				}, function(e){
					// outLine('读取拍照文件错误：'+e.message);
				});
			}, function(e){
				// outLine('失败：'+e.message);
			}, {filename:'_doc/camera/',index:1});
		}
		// 录像
		function getVideo(){
			// outSet('开始录像：');
			var cmr = plus.camera.getCamera();
			cmr.startVideoCapture(function(p){
				// outLine('成功：'+p);
				plus.io.resolveLocalFileSystemURL(p, function(entry){
					createItem(entry);
				}, function(e){
					// outLine('读取录像文件错误：'+e.message);
				} );
			}, function(e){
				// outLine('失败：'+e.message);
			}, {filename:'_doc/camera/',index:i});
		}
		// 显示文件
		function displayFile(li){
			if(w){
				// outLine('重复点击！');
				return;
			}
			if(!li || !li.entry){
				ouSet('无效的媒体文件');
				return;
			}
			var name = li.entry.name;
			var suffix = name.substr(name.lastIndexOf('.'));
			var url = '';
			if(suffix=='.mov' || suffix=='.3gp' || suffix=='.mp4' || suffix=='.avi'){
				//if(unv){plus.runtime.openFile('_doc/camera/'+name);return;}
				url = '/plus/camera_video.html';
			} else {
				url = '/plus/camera_image.html';
			}
			w=plus.webview.create(url,url,{hardwareAccelerated:true,scrollIndicator:'none',scalable:true,bounce:'all'});
			w.addEventListener('loaded', function(){
				w.evalJS('loadMedia("'+li.entry.toLocalURL()+'")');
				// w.evalJS('loadMedia("'+'http://localhost:13131/_doc/camera/'+name+'")');
			}, false );
			w.addEventListener('close', function(){
				w = null;
			}, false);
			w.show('pop-in');
		}
		
		// 添加播放项
		function createItem(entry){
			var li = document.createElement('li');
			li.className = 'ditem';
			li.innerHTML = '<span class="iplay"><font class="aname"></font><br/><font class="ainf"></font></span>';
			li.setAttribute('onclick', 'displayFile(this)' );
			hl.insertBefore( li, le.nextSibling );
			li.querySelector('.aname').innerText = entry.name;
			li.querySelector('.ainf').innerText = '...';
			li.entry = entry;
			updateInformation(li);
			// 设置空项不可见
			le.style.display = 'none';
		}
		// 获取录音文件信息
		function updateInformation(li){
			if(!li || !li.entry){
				return;
			}
			var entry = li.entry;
			entry.getMetadata(function(metadata){
				li.querySelector('.ainf').innerText = dateToStr(metadata.modificationTime);
			}, function(e){
				outLine('获取文件"'+entry.name+'"信息失败：'+e.message);
			} );
		}
		// 获取录音历史列表
		function updateHistory(){
			if(bUpdated||!gentry||!document.body){//兼容可能提前注入导致DOM未解析完更新的问题
				return;
			}
		  	var reader = gentry.createReader();
		  	reader.readEntries(function(entries){
		  		for(var i in entries){
		  			if(entries[i].isFile){
		  				createItem(entries[i]);
		  			}
		  		}
		  	}, function(e){
		  		// outLine('读取录音列表失败：'+e.message);
		  	});
		  	bUpdated = true;
		}
		// 清除历史记录
		function cleanHistory(){
			hl.innerHTML = '<li id="empty" class="ditem-empty">无历史记录</li>';
			le = document.getElementById('empty');
			// 删除音频文件
			// outSet('清空拍照录像历史记录：');
			gentry.removeRecursively(function(){
				// Success
				// outLine('成功！');
			}, function(e){
				// outLine('失败：'+e.message);
			});
		}
				</script>
	</body>

</html>
